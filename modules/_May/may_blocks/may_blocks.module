<?php

/**
 * @file
 * Module for building and managing site's blocks.
 */


module_load_include('inc', 'may_misc', 'inc/constants');


/**
 * Implements hook_block_info().
 */
function may_blocks_block_info() {
 /* 
  $blocks['main_menu_om_articles'] = array(
    'info' => 'OM Articles',
    'cache' => DRUPAL_CACHE_GLOBAL,
  );  
  $blocks['footer_menu'] = array(
    'info' => 'Footer menu',
    'cache' => DRUPAL_CACHE_GLOBAL,
  );
  $blocks['header_links'] = array(
    'info' => 'Header links',
    'cache' => DRUPAL_CACHE_GLOBAL,
  );
  */
  
  
  $blocks['get_prefaceHome'] = array(
    'info' => 'Main section of the Front page preface',
    'cache' => DRUPAL_CACHE_GLOBAL,
  );  
  
  /*
  $blocks['ad_free_ipad_mini'] = array(
    'info' => 'Ad for a free ipad-mini',
    'cache' => DRUPAL_CACHE_GLOBAL,
  );
  
  
  $blocks['newsletters_subscribe'] = array(
    'info' => 'Newsletters subscribe',
    'cache' => DRUPAL_CACHE_GLOBAL,
  );
  */    
    
  return $blocks;
}


/**
 * Implements hook_block_view().
 */
function may_blocks_block_view($delta = '') {
  $block = array();
  switch ($delta) {      
/*    
    case 'main_menu_om_articles':
      $block['subject'] = 'OM Articles';
      $block['content'] = may_blocks_get_omMenuBlock_byTitle('Articles', 'may_blocks_get_omMenuBlock_articles');
      break;

    
    case 'footer_menu':
      $block['subject'] = 'Footer menu';
      $block['content'] = may_blocks_get_footerMenu();
      break; 
    case 'header_links':
      $block['subject'] = 'Header links';
      $block['content'] = may_blocks_get_headerLinks();
      break; 
*/    
    
    case 'get_prefaceHome':
      $block['subject'] = 'Main section of the Front page preface';
      $block['content'] = may_misc_getPrefaceMainSection('front'); // Arg - preface's key
      break;
/*  
    case 'ad_free_ipad_mini':
      $block['subject'] = 'Ad for a free ipad-mini';
      $block['content'] = may_blocks_getAdBlock('free_ipad_mini');
      break;
    
    case 'newsletters_subscribe':
      $block['subject'] = 'Newsletter Sign Up';
      $block['content'] = drupal_get_form('may_misc_newsletterSubscribe_form');
      break;
  */  
    
  }

  return $block;
}


/**
 * Implements hook_block_configure().
 */
function may_blocks_block_configure($delta = '') {
  
  $form = array();
  
//  if ($delta == 'weekly_video') {
//    
//    $form['youtube_video_id'] = array(
//      '#type' => 'textfield', 
//      '#title' => t('YouTube video id'),
//      '#default_value' => variable_get('may_weekly_video_block', NULL), 
//    );
//    
//  }
  
  return $form;
}


/**
 * Implements hook_block_save().
 */
function may_blocks_block_save($delta = '', $edit = array()) {

//  if ($delta == 'weekly_video') {
//    variable_set('may_weekly_video_block', $edit['youtube_video_id']);
//  }
  
}


/**
 * Returns an ad block by its name.
 */
function may_blocks_getAdBlock($ad_name) {
  switch ($ad_name) {
    
//    case 'speedtest_page':
//      //return '<a href="/voip-speed-test"><div title="VoIP Speed Test Tool" ></div></a>';
//      return '<a href="/speed-test-tool"><div title="VoIP Speed Test Tool" ></div></a>';
//      ////'<img alt="VoIP Speed Test Tool" title="VoIP Speed Test Tool" src="/sites/default/files/speedtestbanner.png" />'
//    case 'free_ipad_mini':
//      
//      $path_to_custom_js = 'sites/all/libraries/jquery.plugins/countdown/';
//      drupal_add_js($path_to_custom_js . 'kkcountdown.min.js');
//      $path_to_custom_js = drupal_get_path('module', 'may_misc') . '/js/';
//      drupal_add_js($path_to_custom_js . 'may_countdown.js');
//  
//      return '<a href="/blog/2012/11/19/getvoipcom-holiday-sweepstakes-win-a-free-ipad-mini"><img src="/sites/default/files/a/free-ipad-mini-banner.jpg" /></a>
//              <span time="' . strtotime('2012-12-18, 23:59:59') . '" class="kkcount-down" id="ipad_mini"></span>';
  }
}


/**
 * Returns a themed topics block for a specific content type.
 * 
 * Allows to use same topics for News, Articles, Blog posts, etc.
 */
function may_blocks_get_topicsBlock($content_type) {
  
  global $language;
  $topics = NULL;
  $topics = cache_get($content_type . '_topics_block' . $language->language);
  if (!$topics || empty($topics->data) || $topics->expire < time()) {
    // Key = url_argument, used in building the url, 
    // for example,
    // topics/news for topics list for news 
    // OR blog/provider for show all blog posts tagged with 'provider' topic.
    $content_types = array('blog_post' => 'blog', 'news_post' => 'news', 'article' => 'articles');
    $url_argument = $content_types[$content_type];
    $topics = may_misc_getTopics($content_type, $url_argument, 2);
    if(!$topics) {
      return NULL;
    }
    $topics = theme('may_misc_submenuSimple', array('submenu' => array('below' => $topics), 'class' => 'topics'));
    $topics .= '<div class="more-link">' . l(t('More'), $url_argument . '/tags') . '</div>';
    // Expire = current time + 4 hours.
    cache_set($content_type . '_topics_block' . $language->language, $topics, 'cache', time() + 14400);
  }
  else {
    $topics = $topics->data;
  }
  return $topics; 
}



/**
 * Returns a themed Header links block.
 */
function may_blocks_get_headerLinks() {
  
  $cid = 'may_cached_headerLinks';
  $cache = cache_get($cid, 'cache');

  if ($cache && !empty($cache->data) && $cache->expire > time()) {
    $out = $cache->data;
  }
  else {
    $menu = menu_build_tree('menu-header-links');
    $out = theme('may_misc_headerLinks', array('submenu' => array('below' => $menu)));
    
    cache_set($cid, $out, 'cache', strtotime('+31 day'));
  } 
  
//  $menu = menu_build_tree('menu-header-links');
//  $out = theme('may_misc_headerLinks', array('submenu' => array('below' => $menu)));
  return $out;
}


/**
 * Returns a themed Footer menu.
 */
function may_blocks_get_footerMenu() {
  
  $cid = 'may_footer_menu';
  $cache = cache_get($cid, 'cache');

  if ($cache && !empty($cache->data) && $cache->expire > time()) {
    $out = $cache->data;
  }
  else {
    $menu = menu_build_tree('menu-footer-menu');
    $out = theme('may_misc_submenuSimple', array('submenu' => array('below' => $menu), 'class' => 'menu', 'delimiter' => '<li> | </li>')); // . '<div class="c">В© 2012 GetVoIP.com | All Rights Reserved</div>';
    
    cache_set($cid, $out, 'cache', strtotime('+31 day'));
  } 
  
  //$menu = menu_build_tree('menu-footer-menu');
  //$out = theme('may_misc_submenuSimple', array('submenu' => array('below' => $menu), 'class' => 'menu', 'delimiter' => '<li> | </li>')); // . '<div class="c">В© 2012 GetVoIP.com | All Rights Reserved</div>';
  
  return $out;
}


/**
 * Dispatcher for getting themed block for MegaMenu by a block title.
 */
function may_blocks_get_omMenuBlock_byTitle($title, $function) {

  // global $language;
  // $types = cache_get('types_' . $language->language);
  // Expire = current time + 2 hours.
  // cache_set('types_' . $language->language, $types, 'cache', time() + 7200);
  
  // Get main menu wireframe menu.
  $submenu = may_blocks_getSubmenuByTitle('main-menu', $title);
  //return '<div class="om-btitle">' . $title . '</div>' . $function($submenu);
  return $function($submenu);
}


/**
 * Returns a themed Library block content for MegaMenu.
 */
function may_blocks_get_omMenuBlock_articles($submenu) {
  return theme('may_misc_submenuSimple', array('submenu' => $submenu, 'class' => 'block'));
}


/**
 * Returns a submenu from a menu.
 */
function may_blocks_getSubmenuByTitle($menu_name, $submenu_title) {
  $menu = menu_build_tree($menu_name);
  if(!$menu) {
    return NULL;
  }
  foreach ($menu as $submenu) {
    if ($submenu['link']['link_title'] == $submenu_title) {
      return $submenu;
    }
  }
  return NULL;
}


/**
 * Wrap a block content in proper block's divs.
 */
function may_blocks_wrapInBlockThemed($block_data, $block)
{
  if(!isset($block['content']) || !$block['content']) {
      return null;
  }
  if (is_array($block['content'])) {
    $block['content'] = render($block);
  }
  if(isset($block_data['subjectTag']) && $block_data['subjectTag']) {
    $subjectTag = $block_data['subjectTag'];
  }
  else {
    $subjectTag = 'h2';
  }
  if(isset($block_data['replaceUnderlinesWithDashesInID']) && $block_data['replaceUnderlinesWithDashesInID']) {
    $block_data['module'] = str_replace('_', '-', $block_data['module']);
    $block_data['delta'] = str_replace('_', '-', $block_data['delta']);
  }
  if (isset($block_data['shadow']) && $block_data['shadow']) {
    return 
      '<section id="block-' . $block_data['module'] . '-' . $block_data['delta'] . '" class="block may block-' . $block_data['module'] . (isset($block_data['class']) ? ' ' . $block_data['class'] : '') . '">' 
        . '<div class="inside">'
            . ( ($block['subject'] && (!isset($block_data['subject_visible']) || $block_data['subject_visible']) )
                ? 
                '<div class="block-icon pngfix"></div><' . $subjectTag . ' class="block-title">' . $block['subject'] . '</' . $subjectTag . '>'
                :
                '') 
            . '<div class="content">' . $block['content'] . '</div>
          </div> <!-- /.inside -->
          <div class="shadow"></div>
      </section>';
  }
  else {
    return 
      '<section id="block-' . $block_data['module'] . '-' . $block_data['delta'] . '" class="block may block-' . $block_data['module'] . (isset($block_data['class']) ? ' ' . $block_data['class'] : '') . '">' 
         . ( ($block['subject'] && (!isset($block_data['subject_visible']) || $block_data['subject_visible']) )
            ? 
            '<div class="block-icon pngfix"></div><' . $subjectTag . ' class="block-title">' . $block['subject'] . '</' . $subjectTag . '>'
            :
            '') 
         . '<div class="content">' . $block['content'] . '</div>
      </section>';
  }
}


/**
 * Returns a content of a block wrapped in proper divs.
 */
function may_blocks_getBlockThemed_noCache($block_data){
  
  // No caching version.
  
  $block = module_invoke($block_data['module'], 'block_view', $block_data['delta']);
  if ($block) {
    if (isset($block_data['subject'])) {
      $block['subject'] = $block_data['subject'];
    }
    elseif (@$block_data['no_subject']) {
      $block['subject'] = '';
    }
    return may_blocks_wrapInBlockThemed($block_data, $block);
  }
  return NULL;
  
}


/**
 * Returns a content of a block wrapped in proper divs.
 */
function may_blocks_getBlockThemed($block_data, $cache_on = FALSE, $cache_expire_str = FALSE, $suffix = NULL)
{
  
  // No caching version.
  
  if (!$cache_on) {
    return may_blocks_getBlockThemed_noCache($block_data);
  }

  
  
  // Caching system version.
  
  $cid = 'may-block-cache---' . $block_data['module'] . '-' . $block_data['delta'] . $suffix;
  $cache = cache_get($cid, 'cache');

  if ($cache && !empty($cache->data) && $cache->expire > time()) {
    $out = $cache->data;
  }
  else {

    if ($out = may_blocks_getBlockThemed_noCache($block_data)) {
      if ($cache_expire_str) {
        cache_set($cid, $out, 'cache', strtotime($cache_expire_str));
      }
      else {
        cache_set($cid, $out, 'cache');
      }
      
    }

  } // End of else of if ($cache && !empty($cache->data) && $cache->expire > time()) {

  return $out;

}


